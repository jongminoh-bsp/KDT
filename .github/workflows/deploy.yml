name: "🤖 Amazon Q Auto Infrastructure Generation"

on:
  push:
    branches: [ main ]
    paths: 
      - 'skyline_system_demo/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  amazon-q-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Amazon Q Code Analysis
        run: |
          echo "🤖 Amazon Q 코드 분석 시작..."
          echo "📂 분석 대상: skyline_system_demo/"
          
          cd automation
          python pipeline.py

      - name: Validate Generated Infrastructure
        run: |
          echo "🔍 Amazon Q 생성 결과 검증..."
          
          if [ -f "analysis.json" ]; then
            echo "✅ Amazon Q 분석 결과:"
            cat analysis.json | jq '.recommendations'
          fi
          
          if [ -f "generated/terraform/main.tf" ]; then
            echo "✅ Terraform 코드 생성됨 (Amazon Q 기반)"
            grep -o "# Generated by Amazon Q" generated/terraform/main.tf
          fi
          
          if [ -f "generated/k8s/deployment.yaml" ]; then
            echo "✅ K8s 매니페스트 생성됨 (Amazon Q 기반)"
            grep -o "generated-by: amazon-q" generated/k8s/deployment.yaml
          fi

      - name: Deploy Infrastructure (Amazon Q Generated)
        run: |
          echo "🏗️ Amazon Q 생성 인프라 배포..."
          echo "🎯 AI 권장사항 적용 중..."
          
          # Terraform 배포 (시뮬레이션)
          echo "📋 Terraform Plan (AI Generated)..."
          # cd generated/terraform && terraform plan
          
          echo "🚀 Terraform Apply (AI Generated)..."
          # cd generated/terraform && terraform apply -auto-approve
          
          echo "✅ 인프라 배포 완료 (Amazon Q 기반)"

      - name: Deploy Application (Amazon Q Generated)
        run: |
          echo "🚀 Amazon Q 생성 K8s 배포..."
          
          # K8s 배포 (시뮬레이션)
          echo "📦 K8s 리소스 적용 중..."
          # kubectl apply -f generated/k8s/deployment.yaml
          
          echo "✅ 애플리케이션 배포 완료 (Amazon Q 기반)"

      - name: Amazon Q Summary
        run: |
          echo "## 🤖 Amazon Q 자동 인프라 생성 완료" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 AI 분석 결과" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "analysis.json" ]; then
            echo "- **앱 타입**: $(cat analysis.json | jq -r '.app_type')" >> $GITHUB_STEP_SUMMARY
            echo "- **언어**: $(cat analysis.json | jq -r '.language')" >> $GITHUB_STEP_SUMMARY
            echo "- **포트**: $(cat analysis.json | jq -r '.port')" >> $GITHUB_STEP_SUMMARY
            echo "- **권장 컴퓨팅**: $(cat analysis.json | jq -r '.recommendations.compute')" >> $GITHUB_STEP_SUMMARY
            echo "- **권장 DB**: $(cat analysis.json | jq -r '.recommendations.database')" >> $GITHUB_STEP_SUMMARY
            echo "- **인스턴스 타입**: $(cat analysis.json | jq -r '.recommendations.instance_type')" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏗️ 생성된 리소스" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Terraform**: Amazon Q 분석 기반 인프라 코드" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Kubernetes**: AI 최적화 매니페스트" >> $GITHUB_STEP_SUMMARY
          echo "✅ **배포**: demo.greenbespinglobal.store" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🤖 **Powered by Amazon Q AI**" >> $GITHUB_STEP_SUMMARY
