name: 🤖 Simple Bedrock Test

on:
  workflow_dispatch:
  push:
    branches: [dev]
    paths: ['test_app/**']

jobs:
  bedrock-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install boto3
      run: pip install boto3>=1.34.0
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: us-east-1
    
    - name: Test Bedrock
      run: |
        python3 << 'EOF'
        import boto3
        import json
        
        try:
            print("🤖 Testing real Amazon Bedrock...")
            
            client = boto3.client('bedrock-runtime', region_name='us-east-1')
            
            response = client.invoke_model(
                modelId='anthropic.claude-3-haiku-20240307-v1:0',
                body=json.dumps({
                    "anthropic_version": "bedrock-2023-05-31",
                    "max_tokens": 500,
                    "messages": [{
                        "role": "user", 
                        "content": "Analyze this Node.js app: Express + MongoDB + Redis. What AWS infrastructure do you recommend? Respond in JSON with framework, database, memory, replicas."
                    }]
                })
            )
            
            result = json.loads(response['body'].read())
            ai_response = result['content'][0]['text']
            
            print("🎉 SUCCESS! Real Amazon Bedrock Claude response:")
            print("=" * 60)
            print(ai_response)
            print("=" * 60)
            print("✅ Amazon Bedrock is working!")
            
        except Exception as e:
            print(f"❌ Error: {e}")
            raise
        EOF
