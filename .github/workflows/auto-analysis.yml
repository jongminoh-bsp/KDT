name: 🤖 Auto AI Analysis on Code Push

on:
  push:
    branches: [dev]
    paths: 
      - 'application/**'  # 애플리케이션 코드 경로
      - 'src/**'          # 소스 코드
      - 'pom.xml'         # Maven 설정
      - 'package.json'    # Node.js 설정
      - 'requirements.txt' # Python 설정

env:
  APPLICATION_PATH: /home/ojm/skyline_system_demo

jobs:
  ai-analysis-and-infrastructure:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: 📋 Install Dependencies
      run: |
        pip install -r requirements.txt || echo "No requirements.txt found"
    
    - name: 🔍 Run AI Code Analysis
      run: |
        echo "🤖 Starting Amazon Q AI Analysis..."
        
        # 애플리케이션 코드가 있는지 확인
        if [ -d "src/" ] || [ -f "pom.xml" ] || [ -f "package.json" ]; then
          echo "✅ Application code detected in repository"
          
          # AI 분석 실행
          python3 automation/analyzer/code_analyzer.py ./ > analysis_output.txt
          
          echo "📊 Analysis completed"
          cat analysis_output.txt
        else
          echo "❌ No application code found in repository"
          exit 0
        fi
    
    - name: 🏗️ Generate Infrastructure Code
      run: |
        echo "🏗️ Generating Terraform infrastructure..."
        python3 automation/full_pipeline.py
    
    - name: 🔄 Create Infrastructure PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Git 설정
        git config --global user.name "Amazon Q AI"
        git config --global user.email "ai@amazonq.aws"
        
        # 브랜치 생성
        BRANCH_NAME="infrastructure/ai-generated-$(date +%Y%m%d_%H%M%S)"
        git checkout -b $BRANCH_NAME
        
        # 변경사항 커밋
        git add terraform/ reports/ analysis_summary.json
        git commit -m "🤖 AI-Generated Infrastructure
        
        - Analyzed application code automatically
        - Generated optimized Terraform configuration
        - Created deployment-ready infrastructure
        
        Generated by Amazon Q AI Engine"
        
        # 브랜치 푸시
        git push origin $BRANCH_NAME
        
        # PR 생성
        gh pr create \
          --title "🤖 AI-Generated Infrastructure (Auto-triggered)" \
          --body "## 🔍 Automatic AI Analysis
        
        This PR was **automatically generated** when application code was pushed to the repository.
        
        ### 📊 Analysis Results
        - **Trigger**: Code push to \`dev\` branch
        - **Timestamp**: $(date)
        - **AI Engine**: Amazon Q Code Analyzer
        
        ### 🏗️ Generated Infrastructure
        - Complete Terraform configuration
        - Optimized resource sizing
        - Security best practices applied
        
        ### 🚀 Next Steps
        1. Review the generated Terraform code
        2. Approve this PR to deploy infrastructure
        3. GitHub Actions will handle the deployment
        
        **This is fully automated - no manual intervention required!** 🤖" \
          --base dev \
          --head $BRANCH_NAME \
          --label "ai-generated,infrastructure,auto-triggered"

  # 실패 시 알림
  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    needs: ai-analysis-and-infrastructure
    
    steps:
    - name: 🚨 Analysis Failed
      run: |
        echo "❌ AI analysis pipeline failed"
        echo "Check the workflow logs for details"
